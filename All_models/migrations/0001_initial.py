# Generated by Django 4.1 on 2024-05-21 04:17

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('payment_date', models.DateTimeField()),
                ('service_total_price', models.IntegerField()),
                ('food_total_price', models.IntegerField()),
                ('total_price', models.IntegerField()),
                ('deposit_require', models.IntegerField()),
                ('deposit_amount', models.IntegerField()),
                ('remain_amount', models.IntegerField()),
                ('extra_fee', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Bill',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=191)),
                ('phone', models.CharField(max_length=191, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='FoodOrder',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('food_id', models.CharField(max_length=191)),
                ('food_name', models.CharField(max_length=191)),
                ('food_price', models.IntegerField()),
                ('count', models.IntegerField()),
                ('note', models.CharField(blank=True, max_length=191, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'FoodOrder',
            },
        ),
        migrations.CreateModel(
            name='Lobby',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=191)),
                ('deleted_at', models.CharField(default='null', max_length=191, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Lobby',
            },
        ),
        migrations.CreateModel(
            name='LobType',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('max_table_count', models.IntegerField()),
                ('min_table_price', models.IntegerField()),
                ('deposit_percent', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type_name', models.CharField(max_length=191)),
                ('deleted_at', models.CharField(default='null', max_length=191, null=True)),
            ],
            options={
                'db_table': 'LobType',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=191)),
                ('description', models.CharField(blank=True, max_length=191, null=True)),
                ('page', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Permission',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=191, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Role',
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=191)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.CharField(default='null', max_length=191, null=True)),
            ],
            options={
                'db_table': 'Shift',
            },
        ),
        migrations.CreateModel(
            name='Wedding',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('groom', models.CharField(max_length=191)),
                ('bride', models.CharField(max_length=191)),
                ('wedding_date', models.DateTimeField()),
                ('table_count', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.CharField(blank=True, max_length=191, null=True)),
                ('is_penalty_mode', models.BooleanField(default=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='All_models.customer')),
                ('lobby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weddings', to='All_models.lobby')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='All_models.shift')),
            ],
            options={
                'db_table': 'Wedding',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('display_name', models.CharField(max_length=191)),
                ('username', models.CharField(max_length=191, unique=True)),
                ('password', models.CharField(max_length=191)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='All_models.role')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='ServiceOrder',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('service_id', models.CharField(max_length=191)),
                ('service_name', models.CharField(max_length=191)),
                ('service_price', models.IntegerField()),
                ('note', models.CharField(blank=True, max_length=191, null=True)),
                ('count', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('wedding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='All_models.wedding')),
            ],
            options={
                'db_table': 'ServiceOrder',
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='All_models.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='All_models.role')),
            ],
            options={
                'db_table': 'RolePermission',
            },
        ),
        migrations.AddConstraint(
            model_name='permission',
            constraint=models.UniqueConstraint(fields=('page',), name='Permission_page_key'),
        ),
        migrations.AddField(
            model_name='lobby',
            name='lob_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='All_models.lobtype'),
        ),
        migrations.AddField(
            model_name='foodorder',
            name='wedding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='All_models.wedding'),
        ),
        migrations.AddField(
            model_name='bill',
            name='wedding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='All_models.wedding'),
        ),
        migrations.AddConstraint(
            model_name='rolepermission',
            constraint=models.UniqueConstraint(fields=('role', 'permission'), name='unique_role_permission'),
        ),
        migrations.AlterUniqueTogether(
            name='rolepermission',
            unique_together={('role', 'permission')},
        ),
    ]
